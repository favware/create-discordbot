//  This is the TypeScript configuration file. All the TypeScript compiler magic happens from this config file.
// For more information on configuring TypeScript please see: https://www.typescriptlang.org/docs/handbook/compiler-options.html
{
  "compilerOptions": {
    "outDir": "./dist/",                        /* Redirect output structure to the directory. */
    "rootDir": "./src",                         /* List of root folders whose combined content represents the structure of the project at runtime. */
    "forceConsistentCasingInFileNames": true,   /* Disallow inconsistently-cased references to the same file. */
    "esModuleInterop": true,                    /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "lib": ["es2018"],                          /* Specify library files to be included in the compilation. */
    "target": "es6",                            /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019' or 'ESNEXT'. */
    "module": "commonjs",                       /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
    "moduleResolution": "node",                 /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "newLine": "lf",                            /* Use the specified end of line sequence to be used when emitting files: "crlf" (windows) or "lf" (unix).‚Äù*/
    "noFallthroughCasesInSwitch": true,         /* Report errors for fallthrough cases in switch statement. */
    "noErrorTruncation": true,                  /* Do not truncate error messages.*/
    "noImplicitReturns": true,                  /* Report error when not all code paths in function return a value. */
    "noUnusedLocals": true,                     /* Report errors on unused locals. */
    "removeComments": true,                     /* Do not emit comments to output. */
    "strict": true,                             /* Enable all strict type-checking options. */
    "importHelpers": true,                      /* Import emit helpers from 'tslib'. */
    "baseUrl": "src",                           /* Base directory to resolve non-absolute module names. */
    "paths": {                                  /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
      "@commands/*": ["commands/*"],            /* Maps the "commands" folder under "src" to be directly available */
      "@utils/*": ["utils/*"]                   /* Maps the "util" folder under "src" to be directly available, for example you can do "import winston from '@utils/winston'"*/
    },
    "experimentalDecorators": true,             /* Enables experimental support for ES7 decorators. */
    "resolveJsonModule": true,                  /* Include modules import with .json extension, allows you to do something like "import data from data.json"*/
    "allowJs": true,                            /* Allows files with the .js extension so you can migrate more easily */
    "checkJs": true,                            /* Attempt to typecheck your .js files */
    "incremental": true                         /* Speeds up incremental builds by saving some information of the previous build */
  },
  "include": ["src/**/*.ts"],                   /* Files that should be included in the compile process */
  "exclude": ["node_modules", "dist"]           /* Files that should be excluded from the compile process */
}
